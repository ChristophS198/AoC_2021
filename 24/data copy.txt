inp w
mul x 0
add x z
mod x 26
div z 1
add x 15
eql x w  // never equal -> x=0
eql x 0  // x=1
mul y 0
add y 25
mul y x
add y 1  // y=26 
mul z y
mul y 0  // x=1, y=0, z=0, w=inp
add y w
add y 15
mul y x
add z y  // z=w0+15
inp w
mul x 0
add x z
mod x 26
div z 1
add x 15  // -> x immer > w
eql x w
eql x 0   
mul y 0   // x=1, y=0, z=w0+15, w1=inp
add y 25
mul y x
add y 1
mul z y   // z=26*(w0+15)
mul y 0
add y w
add y 10
mul y x
add z y   // z=26*(w0+15) + w1+10
inp w
mul x 0
add x z
mod x 26
div z 1
add x 12
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 2
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 1
add x 13
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 16
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -12
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 12
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 1
add x 10
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 11
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -9
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 5
mul y x
add z y     // z=z/26, if (z%26)-9 == w
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w     // never true
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 16
mul y x
add z y     // z=26*z+w+16
inp w
mul x 0
add x z
mod x 26
div z 1
add x 13
eql x w     // never true
eql x 0     // x=1
mul y 0
add y 25
mul y x
add y 1     // y=26
mul z y
mul y 0
add y w
add y 6
mul y x
add z y     // z=26*z+w+6
inp w
mul x 0
add x z
mod x 26
div z 26
add x -14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 15
mul y x
add z y     // z=z/26, if (z%26)-14 == w
inp w
mul x 0
add x z
mod x 26
div z 26
add x -11
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 3
mul y x
add z y     // z=z/26, if (z%26)-11 == w
inp w
mul x 0
add x z
mod x 26
div z 26
add x -2
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 12
mul y x
add z y     // z=z/26, if (z%26)-2 != w
inp w      // w=5 and z_start is irrelevant and at the end z==15
mul x 0
add x z                     // z == w+16
mod x 26
div z 26                    // z = 0
add x -16
eql x w     // 
eql x 0     // x=0 (if (z%26)-16 == w)
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 10
mul y x
add z y     // z=z/26, if (z%26)-16 == w
inp w       // z muss kleiner 26 sein (damit div z 26 -> 0) und z-14==w  (damit eql x w -> 1)
mul x 0
add x z
mod x 26
div z 26
add x -14
eql x w  // x==w, damit x=1 und im nächsten Schritt x=0
eql x 0  // wenn x==1 war, wird x=0 gesetzt 
mul y 0
add y 25 // y=25
mul y x  // 
add y 1  // y=26 oder y=1, abhängig von x==w
mul z y  // z
mul y 0
add y w
add y 13 // y=w+13 >= 14
mul y x
add z y